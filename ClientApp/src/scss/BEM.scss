///
@mixin element($element) {
    &__#{$element} {
        @content;
    }
}

///
@mixin modifier($modifier) {
    &--#{$modifier} {
        @content;
    }
}

// the BEM modifier() mixin
@mixin nestedModifier($name) {
	//@warn('the nested modifier mixin should not be used');

	@at-root {
		// '&' is a double-wrapped list
		$selector: nth(&, 1);
		// direct parent will be the last item in that list
		$direct-parent: nth($selector, length($selector));
		// modifier should have all properties of parent
		#{$direct-parent}--#{$name} {
			@extend #{$direct-parent};
		}
		// '@content' will be in a nested selector however, if that is the context
		#{&}--#{$name} {
			@content;
		}
	}
}


/// @alias element
@mixin e($element) {
    @include element($element)  {
        @content;
    }
}

/// @alias modifier
@mixin m($modifier) {
    @include modifier($modifier) {
        @content;
    }
}